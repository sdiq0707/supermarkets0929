<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.woniu.dao.ProductindetailMapper" >
  <resultMap id="BaseResultMap" type="com.woniu.domain.Productindetail" >
    <id column="PIID" property="piid" jdbcType="INTEGER" />
    <result column="ProductID" property="productid" jdbcType="INTEGER" />
    <result column="PName" property="pname" jdbcType="VARCHAR" />
    <result column="PIInQuantiy" property="piinquantiy" jdbcType="INTEGER" />
    <result column="PimportPrice" property="pimportprice" jdbcType="REAL" />
    <result column="SupplierID" property="supplierid" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.woniu.domain.Triple" id="aa">
	<result column="a" property="a" jdbcType="VARCHAR" />
	<result column="b" property="b" jdbcType="INTEGER" />
	<result column="c" property="c" jdbcType="DOUBLE" />
  </resultMap>
  
  <select id="findAllByNull" resultMap="aa">
		SELECT s.`SName` AS
		a,COUNT(*) AS b,SUM(PimportPrice) AS c FROM productindetail p,supplier
		s WHERE p.`SupplierID` = s.`SupplierID` GROUP BY s.`SName` ORDER BY c
	</select>

	<select id="findAllBySname" parameterType="java.lang.String"
		resultMap="aa">
		SELECT
		p.`PName` as
		a,SUM(PIInQuantiy) as b,SUM(PimportPrice)
		as c FROM productindetail p
		WHERE p.`SupplierID` =
		(
		SELECT
		s.`SupplierID` FROM supplier s WHERE
		s.`SName` = #{sname}
		) GROUP BY
		p.`PName` ORDER BY SUM(PimportPrice)
	</select>

	<select id="findAllByProduct" resultMap="aa">
		SELECT
		p.`PName` as a,SUM(P.`PIInQuantiy`) as b,SUM(p.`PimportPrice`) as c FROM
		productindetail p GROUP BY p.`PName`ORDER BY SUM(p.`PimportPrice`)
	</select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PIID, ProductID, PName, PIInQuantiy, PimportPrice, SupplierID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.woniu.domain.ProductindetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productindetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from productindetail
    where PIID = #{piid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from productindetail
    where PIID = #{piid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.ProductindetailExample" >
    delete from productindetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.Productindetail" >
    insert into productindetail (PIID, ProductID, PName, 
      PIInQuantiy, PimportPrice, SupplierID
      )
    values (#{piid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, 
      #{piinquantiy,jdbcType=INTEGER}, #{pimportprice,jdbcType=REAL}, #{supplierid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.Productindetail" >
    insert into productindetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="piid != null" >
        PIID,
      </if>
      <if test="productid != null" >
        ProductID,
      </if>
      <if test="pname != null" >
        PName,
      </if>
      <if test="piinquantiy != null" >
        PIInQuantiy,
      </if>
      <if test="pimportprice != null" >
        PimportPrice,
      </if>
      <if test="supplierid != null" >
        SupplierID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="piid != null" >
        #{piid,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="piinquantiy != null" >
        #{piinquantiy,jdbcType=INTEGER},
      </if>
      <if test="pimportprice != null" >
        #{pimportprice,jdbcType=REAL},
      </if>
      <if test="supplierid != null" >
        #{supplierid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.ProductindetailExample" resultType="java.lang.Integer" >
    select count(*) from productindetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update productindetail
    <set >
      <if test="record.piid != null" >
        PIID = #{record.piid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null" >
        ProductID = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        PName = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.piinquantiy != null" >
        PIInQuantiy = #{record.piinquantiy,jdbcType=INTEGER},
      </if>
      <if test="record.pimportprice != null" >
        PimportPrice = #{record.pimportprice,jdbcType=REAL},
      </if>
      <if test="record.supplierid != null" >
        SupplierID = #{record.supplierid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update productindetail
    set PIID = #{record.piid,jdbcType=INTEGER},
      ProductID = #{record.productid,jdbcType=INTEGER},
      PName = #{record.pname,jdbcType=VARCHAR},
      PIInQuantiy = #{record.piinquantiy,jdbcType=INTEGER},
      PimportPrice = #{record.pimportprice,jdbcType=REAL},
      SupplierID = #{record.supplierid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.Productindetail" >
    update productindetail
    <set >
      <if test="productid != null" >
        ProductID = #{productid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        PName = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="piinquantiy != null" >
        PIInQuantiy = #{piinquantiy,jdbcType=INTEGER},
      </if>
      <if test="pimportprice != null" >
        PimportPrice = #{pimportprice,jdbcType=REAL},
      </if>
      <if test="supplierid != null" >
        SupplierID = #{supplierid,jdbcType=INTEGER},
      </if>
    </set>
    where PIID = #{piid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.Productindetail" >
    update productindetail
    set ProductID = #{productid,jdbcType=INTEGER},
      PName = #{pname,jdbcType=VARCHAR},
      PIInQuantiy = #{piinquantiy,jdbcType=INTEGER},
      PimportPrice = #{pimportprice,jdbcType=REAL},
      SupplierID = #{supplierid,jdbcType=INTEGER}
    where PIID = #{piid,jdbcType=INTEGER}
  </update>
</mapper>